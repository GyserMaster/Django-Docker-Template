- MY LOCAL.CONF NGINX CONFIG
upstream django_server {
    #ip_hash;
    server django_app:8000;
    server django_app_2:8001;   # APUNTA A DOCKER-COMPOSE -> NOMBRE DE SERVICIO
}

server {
    listen 80;
    server_name web01.es;

    location /static/static/ {
        alias /code/static/static/;
    }

    location /static/media/ {
        alias /code/static/media/;
    }

    location / {
        proxy_pass http://django_server;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;
        proxy_redirect off;
    }
}

##########################################################

https://www.youtube.com/watch?v=DyXl4c2XN-o&t=280s
apt install certbot python3-certbot-nginx
certbot --nginx -d web01.es -d *.web01.es --register-unsafely-without-email

certbot --authenticator standalone --installer nginx -d web01.es -d *.web01.es --pre-hook "service nginx stop" --post-hook "service nginx start"



- MAKE THE NGINX CONFIG FILE FOR OUR HTTPS SITE

upstream django_server {
    #ip_hash;
    server django_app:8000;
    server django_app_2:8001;   # APUNTA A DOCKER-COMPOSE -> NOMBRE DE SERVICIO
}

server {
    listen 443 ssl;
    server_name web01.es;

    location /static/static/ {
        alias /code/static/static/;
    }

    location /static/media/ {
        alias /code/static/media/;
    }

    location / {
        proxy_pass http://django_server;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;
        proxy_redirect off;
    }

    ssl_certificate /etc/nginx/ssl/web01.es.crt;
    ssl_certificate_key /etc/nginx/ssl/web01.es.key;
}
server {
    if ($host = web01.es) {
        return 301 https://$host$request_uri;
    }

    listen 80;
    listen [::]:80;
    server_name web01.es;
    return 404;
}


https://www.youtube.com/watch?v=X3Pr5VATOyA&pbjreload=101
openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /etc/nginx/ssl/web01.es.key -out /etc/nginx/ssl/web01.es.crt
mkdir /etc/nginx/ssl
